package videoclubs;

import java.awt.Dimension;
import java.awt.event.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.event.*;

public class LoginBD extends javax.swing.JDialog implements DocumentListener, FocusListener {

    private Connection conn;

    public LoginBD(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        actualizaBtnConect();

        jT_usuario.getDocument().putProperty("owner", jT_usuario);
        jP_contraseña.getDocument().putProperty("owner", jP_contraseña);
        jT_usuario.getDocument().putProperty("etiqueta", jL_usuario);
        jP_contraseña.getDocument().putProperty("etiqueta", jL_contraseña);

        jT_usuario.setName("usuario");
        jP_contraseña.setName("contraseña");

        jT_usuario.addFocusListener(this);
        jP_contraseña.addFocusListener(this);
        jT_usuario.getDocument().addDocumentListener(this);
        jP_contraseña.getDocument().addDocumentListener(this);

        //--------WindowListener--------------------------------------
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int opcion = JOptionPane.showConfirmDialog(rootPane, "¿Seguro que quiere salir?", "Saliendo de Login",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                if (opcion == JOptionPane.YES_OPTION) {
                    System.exit(0);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Ha cancelado la salida. Volviendo...", "Salida cancelada", JOptionPane.INFORMATION_MESSAGE);
                }
            }

        });

        setLocationRelativeTo(null);
        setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jB_Conectar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jT_nombreBD = new javax.swing.JTextField();
        jT_ServidorBD = new javax.swing.JTextField();
        jC_sgbd = new javax.swing.JComboBox<>();
        jL_sgbd = new javax.swing.JLabel();
        jT_usuario = new javax.swing.JTextField();
        jL_usuario = new javax.swing.JLabel();
        jL_contraseña = new javax.swing.JLabel();
        jP_contraseña = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 51));
        jLabel1.setText("Usuario:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 51));
        jLabel2.setText("Contraseña:");

        jB_Conectar.setForeground(new java.awt.Color(255, 0, 0));
        jB_Conectar.setText("Conectar");
        jB_Conectar.setFocusable(false);
        jB_Conectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_ConectarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 204), 1, true), "Base de Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 13), new java.awt.Color(0, 102, 153))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 51));
        jLabel3.setText("Tipo:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 51));
        jLabel4.setText("Nombre:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 51));
        jLabel5.setText("Servidor:");

        jT_nombreBD.setColumns(14);
        jT_nombreBD.setText("scott");

        jT_ServidorBD.setColumns(14);
        jT_ServidorBD.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jT_ServidorBD.setText("localhost");
        jT_ServidorBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jT_ServidorBDActionPerformed(evt);
            }
        });

        jC_sgbd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elija SGBD", "MySql", "Oracle" }));
        jC_sgbd.setSelectedIndex(1);
        jC_sgbd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jC_sgbdItemStateChanged(evt);
            }
        });

        jL_sgbd.setForeground(new java.awt.Color(255, 0, 0));
        jL_sgbd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_sgbd.setText("*SGBD Obligatorio");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jC_sgbd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jT_nombreBD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jT_ServidorBD, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jL_sgbd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jC_sgbd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(3, 3, 3)
                .addComponent(jL_sgbd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jT_nombreBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jT_ServidorBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jT_usuario.setColumns(14);
        jT_usuario.setText("scott");

        jL_usuario.setForeground(new java.awt.Color(255, 0, 0));
        jL_usuario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_usuario.setText("*Usuario Obligatorio");

        jL_contraseña.setForeground(new java.awt.Color(255, 0, 0));
        jL_contraseña.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jL_contraseña.setText("*Contraseña Obligatoria");

        jP_contraseña.setColumns(14);
        jP_contraseña.setText("tiger");
        jP_contraseña.setName(""); // NOI18N

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Login BD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jL_contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jLabel1))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jP_contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jT_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jB_Conectar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jL_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(9, 9, 9)
                .addComponent(jL_usuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jP_contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jL_contraseña)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jB_Conectar)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //---------------ActionListener Boton Conectar--------------------------------------------
    private void jB_ConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_ConectarActionPerformed
        String tipoBD = (String) jC_sgbd.getSelectedItem();
        DatosConn conex = obtieneConexion(tipoBD, jT_ServidorBD.getText(), jT_nombreBD.getText(),
                jT_usuario.getText(), jP_contraseña.getText());

        conn = conex.getConn();

        if (conn == null) {
            int opcion = JOptionPane.showConfirmDialog(rootPane, "No se ha podido conectar con la BD. ¿Quiere reintentarlo? \n " + conex, "Error al crear conexión",
                    JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
            if (opcion == JOptionPane.NO_OPTION) {
                System.exit(0);
            }
        } else {
            animacionCierre(this);
        }
    }//GEN-LAST:event_jB_ConectarActionPerformed

    private void jT_ServidorBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jT_ServidorBDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jT_ServidorBDActionPerformed

    //-------------Evento ComboBox----------------------------------------------
    private void jC_sgbdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jC_sgbdItemStateChanged
        if (((String) jC_sgbd.getSelectedItem()).equalsIgnoreCase("mysql")) {
            jT_nombreBD.setText("scott");
            jL_sgbd.setText("");
        } else if (((String) jC_sgbd.getSelectedItem()).equalsIgnoreCase("oracle")) {
            jT_nombreBD.setText("xe");
            jL_sgbd.setText("");
        } else {
            jL_sgbd.setText("*SGBD Obligatorio");
        }
        actualizaBtnConect();
    }//GEN-LAST:event_jC_sgbdItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_Conectar;
    private javax.swing.JComboBox<String> jC_sgbd;
    private javax.swing.JLabel jL_contraseña;
    private javax.swing.JLabel jL_sgbd;
    private javax.swing.JLabel jL_usuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPasswordField jP_contraseña;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jT_ServidorBD;
    private javax.swing.JTextField jT_nombreBD;
    private javax.swing.JTextField jT_usuario;
    // End of variables declaration//GEN-END:variables

    //--------------------------------------------------------------------------
    static DatosConn obtieneConexion(String tipoBD, String servidor, String nombreBD, String usuario, String contraseña) {
        DatosConn datosConexion = new DatosConn();
        String url = "";
        try {
            //1.- Cargar el Driver............................
            if (tipoBD.equalsIgnoreCase("Oracle")) {
                DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
                url = "jdbc:oracle:thin:@" + servidor + ":1521:" + nombreBD;
            } else {
                DriverManager.registerDriver(new com.mysql.jdbc.Driver());
                url = "jdbc:mysql://" + servidor + "/" + nombreBD;
            }

            //2.- Obtener una conexión a la BD............................
            datosConexion.setConn(DriverManager.getConnection(url, usuario, contraseña));

        } catch (SQLException ex) {
            //System.out.println("Error cargando el Driver -> " + ex.getMessage());
            datosConexion.setMensajeError(ex.getMessage());
            datosConexion.setCodigoError(Integer.toString(ex.getErrorCode()));

        }

        return datosConexion;
    }

    //-------Document Listener--------------------------------------------------
    @Override
    public void insertUpdate(DocumentEvent e) {
        campoVacio(e);
        actualizaBtnConect();

    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        campoVacio(e);
        actualizaBtnConect();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {

    }

    //--------------------------------------------------------------------------
    void campoVacio(DocumentEvent e) {
        JTextField campo = (JTextField) e.getDocument().getProperty("owner");
        JLabel etiqueta = (JLabel) e.getDocument().getProperty("etiqueta");

        String texto = campo.getText();
        String nombre = campo.getName();
        int longitud = texto.length();

        if (longitud == 0) {
            etiqueta.setText(nombre + " no puede estar vacío/a.");
            etiqueta.setVisible(true);
        } else {
            etiqueta.setVisible(false);
        }

    }

    //---------------------FOCUS LISTENER---------------------------------------
    @Override
    public void focusGained(FocusEvent e) {

    }

    @Override
    public void focusLost(FocusEvent e) {
        JTextField campo = (JTextField) e.getSource();
        String texto = campo.getText();
        campo.setToolTipText("Empieza mayus 1 minus 1num (Minimo 5 caracteres)");

        if (texto.length() != 0) {
            switch (campo.getName()) {
                case "usuario":
                    validaCampo(jL_usuario, texto);
                    break;

                case "contraseña":
                    validaCampo(jL_contraseña, texto);
                    break;

            }
        }
    }

    //--------------Valida el usuario y contraseña------------------------------
    static void validaCampo(JLabel etiqueta, String texto) {
        //if(!texto.matches("^[A-Z](?=.*[a-z])(?=.*\\d)\\w{5,}$")){
        if (!texto.matches("\\w{5,}")) {
            etiqueta.setText("Formato erróneo.");
            etiqueta.setVisible(true);
        }
    }

    //------------Activa o Desactiva el boton-----------------------------------
    private void actualizaBtnConect() {
        String textoUser = jT_usuario.getText();
        String textoPass = jP_contraseña.getText();
        //String regex = "^[A-Z](?=.*[a-z])(?=.*\\d)\\w{5,}$";
        String regex = "\\w{5,}";
        boolean validaUser = textoUser.matches(regex);
        boolean validaPasswd = textoPass.matches(regex);
        boolean comboValido = !((String) jC_sgbd.getSelectedItem()).equalsIgnoreCase("elija SGBD");

        if (!textoUser.isEmpty() && !textoPass.isEmpty() && validaUser && validaPasswd && comboValido) {
            jB_Conectar.setEnabled(true);
        } else {
            jB_Conectar.setEnabled(true);
        }
    }

    //--------------------------------------------------------------------------
    public Connection getConn() {
        return conn;
    }

    public void setConn(Connection conn) {
        this.conn = conn;
    }

    
    //--------------------------------------------------------------------------
    public static void animacionCierre(JDialog ventana) {
        Dimension dim = ventana.getSize();
        for (int i = dim.height; i > 0; i--) {
            ventana.setSize(dim.width, i);
        }
        ventana.setVisible(false);
    }

}
